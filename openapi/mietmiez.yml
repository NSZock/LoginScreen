openapi: '3.0.3'
info:
  title: MietMiez API
  version: '1.0'
servers:
  - url: https://api.mietmiez.com/v1
tags:
  - name: user
    description: Everything related about user management
  - name: system
    description: Everything realated about the backend system and availability
paths:
  /health:
    get:
      tags:
        - system
      responses:
        '200':
          description: Server is running and API is reachable.
        '500':
          description: Internal server error that cannot be solved. Further actions needed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemStatus'

  /user:
    post:
      tags:
        - user
      summary: Register new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created
        '400':
          description: Some input is not correct
    delete:
      tags:
        - user
      summary: Delete user and all its information
      responses:
        '200':
          description: User successfuly deleted
        '410':
          description: User does not exist or was permanently deleted
  /user/{username}:
    get:
      tags:
        - user
      summary: Obtain information about specified user
      parameters:
        - name: username
          in: path
          description: Username of user
          required: true
          schema:
            type: string
            example: JoAp
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: user not found

components:
  schemas:
    SystemStatus:
      type: object
      properties:
        status:
          type: integer
          example: 100
        message:
          type: string
          example: Service down due to maintance work
    User:
      type: object
      required:
        - first-name
        - last-name
        - username
        - email
        - password
        - city
      properties:
        first-name:
          type: string
          example: John
          minLength: 3
        last-name:
          type: string
          example: Appleseed
          minLength: 3
        username:
          type: string
          example: JoAp
          minLength: 4
        email:
          type: string
          example: john.appleseed@mail.com
          minLength: 5
        password:
          type: string
          format: password
          minLength: 8
        city:
          type: string
          example: Stuttgart
          minLength: 3
          nullable: true